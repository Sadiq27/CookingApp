// <auto-generated />
using CookingApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CookingApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240625123436_UpdateRecipeIngredientIngredient")]
    partial class UpdateRecipeIngredientIngredient
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CookingApp.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pasta"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Soup"
                        });
                });

            modelBuilder.Entity("CookingApp.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Instructions = "Cook spaghetti. Mix eggs and cheese. Cook pancetta. Combine everything.",
                            Name = "Spaghetti Carbonara"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Instructions = "Cook onions and garlic. Add tomatoes. Simmer. Blend. Season.",
                            Name = "Tomato Soup"
                        });
                });

            modelBuilder.Entity("CookingApp.Models.RecipeIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ingredient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ingredient = "Spaghetti",
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Ingredient = "Eggs",
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Ingredient = "Pancetta",
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Ingredient = "Parmesan",
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 5,
                            Ingredient = "Pepper",
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 6,
                            Ingredient = "Tomatoes",
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 7,
                            Ingredient = "Onions",
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 8,
                            Ingredient = "Garlic",
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 9,
                            Ingredient = "Basil",
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 10,
                            Ingredient = "Salt",
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 11,
                            Ingredient = "Pepper",
                            RecipeId = 2
                        });
                });

            modelBuilder.Entity("CookingApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "$2a$11$FPIS7Na1Jw7QeH/VLHWmGet7xunXGGgoC.hesTo5fFLwgSYseyrGy",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("CookingApp.Models.Recipe", b =>
                {
                    b.HasOne("CookingApp.Models.Category", "Category")
                        .WithMany("Recipes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CookingApp.Models.RecipeIngredient", b =>
                {
                    b.HasOne("CookingApp.Models.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("CookingApp.Models.Category", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("CookingApp.Models.Recipe", b =>
                {
                    b.Navigation("RecipeIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
